class LL {
    Node head;
    private int size;
    
    class Node {
        int data;
        Node next;
        
        Node(int data){
            this.data =  data;
            this.next = null;
            size++;
        }
    }
    
    public int getSize(){
        return size;
    }
    
    public void addFirst(int data){
        Node newNode =  new Node(data);
        
        if(head == null){
            head = newNode;
            return;
        }
        newNode.next = head;
        head = newNode;
        return;
    }
    
    public void addLast(int data){
        Node newNode =  new Node(data);
        if(head ==  null){
            head = newNode;
            return;
        }
        Node currentNode = head;
        while(currentNode.next != null){
            currentNode = currentNode.next;
        }
        currentNode.next = newNode;
    }
    
    public void printList(){
        Node current = head;
        while(current != null){
            System.out.print(current.data +"->");
            current = current.next;
        }
        System.out.print("Null");
    }
    
    public void reverseList(){
        if(head ==  null || head.next == null){
            return;
        }
        Node current = head.next;
        Node prev = head;
        while(current != null){
            Node next =  current.next;
            current.next =  prev;
            
            //update
            prev = current;
            current = next;
        }
        
        head.next = null;
        head = prev;
    }
    
    public static void main(String[] args) {
        LL list = new LL();
        list.addFirst(1);
        list.addLast(2);

        list.printList();
        list.reverseList();
        list.printList();
    

    }
}
